---
- hosts: test
  become: yes
  tasks:
    - name: Test Configure Boot Options
      shell: grep -c cgroup /boot/firmware/cmdline.txt || true
      register: boot_config_grep
    - name: Configure Boot Options
      lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: True
        regexp: '([^\n]+)'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1'
      when: boot_config_grep.stdout == '0'
    - name: Update and upgrade
      apt:
        update_cache: yes
        #upgrade: yes
    - name: Reboot (Timeout 5 mins)
      reboot:
        reboot_timeout: 300
    #adduser?
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: Update and install docker
      apt:
        update_cache: yes
        name: docker-ce
        #=18.06.3~ce~3-0~ubuntu
        state: present
    - name: Create Docker Daeomon
      copy:
        src: /home/ansible/git/ansible/files/docker/daemon.json
        dest: /etc/docker/daemon.json
    - name: Enable routing
      replace:
        path: /etc/sysctl.conf
        regexp: '#net.ipv4.ip_forward=1'
        replace: 'net.ipv4.ip_forward=1'
    - name: Reboot (Timeout 5 mins)
      reboot:
        reboot_timeout: 300
    - name: Check docker is running
      service:
        name: docker
        state: started
        enabled: yes
    - name: Add Kubernetes GPG apt key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
    - name: apt update
      apt:
        update_cache: yes
        pkg:
        - kubeadm
        - kubectl
        - kubelet
        state: present

